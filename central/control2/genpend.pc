/************************************************************************/
/*									*/
/* genpend.pc	    : Funcion para ingresar las trxs faltantes          */
/*		      a la tabla de credito cred_trx.            	*/
/*									*/
/* Proyecto	    : Autorizacion de tarjetas de credito - StoreFlow.	*/
/* Cliente	    : Coto						*/
/* Autor	    : Rolando Loustric					*/
/* Fecha	    : 14/07/97						*/
/* Compilador	    : C++						*/
/* Base de datos    : Oracle						*/
/*									*/
/************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#ifndef OK
  #define OK    0
  #define NOOK  -1
#endif
 
#define USERID_LEN   20
#define PASSWD_LEN   20

extern int	SqlErrno;

typedef struct
{
    char	userid[USERID_LEN+1];
    char	passwd[PASSWD_LEN+1];
} str_login;
     
EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
    VARCHAR	userid[20];
    VARCHAR	passwd[20];
    VARCHAR	nro_caj[5];
    VARCHAR	nro_caj_sf[5];
    VARCHAR	monto[12];
    VARCHAR	fecha[4];
    VARCHAR	fec_loc[10];
    VARCHAR	nro_tar[20];
    VARCHAR	cod_tar[2];
    VARCHAR	nro_ca[2];
    VARCHAR	descrip[30];
EXEC SQL END DECLARE SECTION;

void getFechaActual(char *fecha)
{
struct tm	*newtime;
time_t	        ltime;

    time(&ltime);
    newtime=localtime(&ltime);

    sprintf(fecha, "%02d/%02d/%02d", newtime->tm_mday, 
	           newtime->tm_mon+1, newtime->tm_year);
}


int open_db(str_login *data)
{
int SqlErrno;

    strcpy((char *)userid.arr, data->userid);
    userid.len=strlen(data->userid);
    strcpy((char *)passwd.arr, data->passwd);
    passwd.len=strlen(data->passwd);

    EXEC SQL
	CONNECT :userid IDENTIFIED BY :passwd;
    if (sqlca.sqlcode!=OK)
       {
	  SqlErrno=sqlca.sqlcode;
	  return NOOK;
       }
    SqlErrno=OK;
    return OK;
}

void init()
{
    str_login	login_data;

    strcpy(login_data.userid, "u601");
    strcpy(login_data.passwd, "u601");
    open_db(&login_data);
}



void main (int argc, char *argv[])
{
FILE    *salida;
FILE    *fd;
FILE    *fd1;
char    buffer[255];
char    fec[15];
char    filename[40];
char    filename2[40];
char    szfecha[5];
char    tip_tar[255];
char    nro_suc[6];
int     cont=0;

     if (argc!=3)
     {
         printf("\tUso: genvta <nro de sucursal, tipo de tarjeta>\n");
         exit(0);
     }

     strcpy(nro_suc, argv[1]);
     printf("sucursal: [%s]\n", &nro_suc[3]);

     strcpy(tip_tar, argv[2]);
     printf("tarjeta: [%s]\n", tip_tar);
     
     if ((fd=fopen("/online/log/fecha.dat", "r"))==NULL)
     {
         printf("Error en apertura de archivo fecha.dat\n");
         exit(0);
     }

     fscanf(fd, "%s", szfecha);
     printf("fecha leida: [%s]\n", szfecha);

     strcpy(filename, "/online/chec/suc");
     strcat(filename, &nro_suc[3]);
     strcat(filename, "/");
     strncat(filename, tip_tar, 3);
     strcat(filename, "pend.");
     strcat(filename, szfecha);

     printf("Apertura de archivo [%s]\n", filename);

     if ((salida=fopen(filename, "w"))==NULL)
     {
         printf("Error en apertura de archivo [%s]\n", filename);
         exit(0);
     }
   
     fprintf(salida, "\n\tCOTO C.I.C.S.A.\t\t\tPGM: genpend\n"); 
     getFechaActual(fec);
     printf("Fecha actual: %s\n", fec);
     fprintf(salida, "\tFecha: %s\n", fec);

     fprintf(salida, "\n\n\t\t\tListado de transacciones pendientes\n\n\n"); 

     fprintf(salida, "\n\t\tTarjeta: %s\n\n", tip_tar); 


     strcpy(filename2, "/online/chec/suc");
     strcat(filename2, &nro_suc[3]);
     strcat(filename2, "/");
     strcat(filename2, "pending.");
     strcat(filename2, szfecha);
     if ((fd1=fopen(filename2, "r"))==NULL)
     {
         printf("Error en apertura de archivo: [%s]\n", filename2);
         exit(0);
     }

     while (fgets(buffer, sizeof(buffer), fd1)!=NULL)
     {
         if (!strncmp(tip_tar, &buffer[9], strlen(tip_tar)))
         {
            cont++;
            fprintf(salida, "%s", buffer);
         }

     }
 
     fprintf(salida, "\n\n\t\t\t\tTotal de operaciones: %ld\n", cont); 

     close(fd);
     close(fd1);
     close(salida);
 
}
