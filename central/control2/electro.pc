
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#ifndef OK
  #define OK    0
  #define NOOK  -1
#endif
 
#define USERID_LEN   20
#define PASSWD_LEN   20

extern int	SqlErrno;

typedef struct
{
    char	userid[USERID_LEN+1];
    char	passwd[PASSWD_LEN+1];
} str_login;
     
EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
    VARCHAR	userid[20];
    VARCHAR	passwd[20];
    VARCHAR	nro_caj[5];
    VARCHAR	nro_caj_sf[5];
    VARCHAR	monto[12];
    VARCHAR	fecha[4];
    VARCHAR	fec_loc[10];
    VARCHAR	nro_tar[20];
    VARCHAR	cod_tar[2];
    VARCHAR	nro_ca[2];
    VARCHAR	descrip[30];
    VARCHAR	cod_trx[2];
    VARCHAR     nro_lot[4];
    VARCHAR     fec_rta[10];
    VARCHAR     caja_aux[5];

EXEC SQL END DECLARE SECTION;

void getFechaActual(char *fecha)
{
struct tm	*newtime;
time_t	        ltime;

    time(&ltime);
    newtime=localtime(&ltime);

    sprintf(fecha, "%02d/%02d/%02d", newtime->tm_mday, 
	           newtime->tm_mon+1, newtime->tm_year);
}


int open_db(str_login *data)
{
int SqlErrno;

    strcpy((char *)userid.arr, data->userid);
    userid.len=strlen(data->userid);
    strcpy((char *)passwd.arr, data->passwd);
    passwd.len=strlen(data->passwd);

    EXEC SQL
	CONNECT :userid IDENTIFIED BY :passwd;
    if (sqlca.sqlcode!=OK)
       {
	  SqlErrno=sqlca.sqlcode;
	  return NOOK;
       }
    SqlErrno=OK;
    return OK;
}

void init()
{
    str_login	login_data;

    strcpy(login_data.userid, "u601");
    strcpy(login_data.passwd, "u601");
    open_db(&login_data);
}



void main (int argc, char *argv[])
{
FILE    *fd;
char    filename[30];
char    szfecha[5];
char    fecha_aux[6];

     init();

     if ((fd=fopen("/online/log/fecha.dat", "r"))==NULL)
     {
        printf("Error en apertura de archivo: fecha.dat\n");
        exit(0);
     }

     fscanf(fd, "%s", szfecha);
     printf("Fecha leida: %s\n", szfecha);

     strcpy((char *)fecha.arr, szfecha);
     fecha.len=strlen(szfecha);

     strcpy(filename, "/online/chec/res/");
     strcat(filename, "ListElectron.");
     strcat(filename, szfecha);

     if ((fd=fopen(filename, "w"))==NULL)
     {
         printf("Error en apertura de archivo [%s]\n", filename);
         exit(0);
     }

     printf("Generando: [%s]\n", filename);

     getFechaActual(fec);
     fprintf(fd, "\n\tCOTO C.I.C.S.A.\t\t\t\t\tFECHA : %s\n",fec); 
     printf("Fecha actual: %s\n", fec);
  
     EXEC SQL
      DECLERE cursor CURSOR FOR
	SELECT 
              nro_caj_sf ,
              nro_caj ,
              nro_trx ,
              decode(cod_trx, '00' ,'Vent.', '01','Anul.','02','Devo.') ,
              decode(cod_est,'00','Pend.', '02', 'Acep.','04','Pres.',
              '03','Rech.', 'E0','Pend.','E2','Acep.','E4','Pres.',
              'E3','Rech.') ,
              substr(fec_loc,1,2)||'/'||substr(fec_loc,3,2) ,
              nro_tar , monto  
	FROM cred_trx
	WHERE nro_tar like '4517%'
      	      AND fec_loc like '&1%'
	ORDER BY nro_caj_sf, nro_caj,cod_trx;

     EXEC SQL
         OPEN cursor;  

     EXEC SQL 
         FETCH cursor
         INTO :nro_caj_sf, :nro_caj, :nro_trx, :cod_trx, :cod_est, :fecha,
              :nro_tar, :monto;
         
     total=0.0;
 
     while (sqlca.sqlcode==0)
     { 


     fprintf(fcie, "\tPGM: electron     \n",); 

     fprintf(fd, "\n\n\t LISTADO DE TARJETAS ELECTRON POR SUCURSAL \n"); 

       memset(fecha_aux, '\0', 6);
       strncpy(fecha_aux, szfecha, 2);
       strcat(fecha_aux, "/");
       strcat(fecha_aux, &szfecha[2]);
       fprintf(fd, "  TARJETA: Electron AL: %s\n", fecha_aux); 
       fprintf(fd, "-------------------------------------------------------------------------------\n"); 
       fprintf(fd, "Sucursal \t      Venta\t    Cerrado\t  Pendiente \t Pend. Ant.\n"); 
       fprintf(fd, "-------------------------------------------------------------------------------\n\n"); 
 
       EXEC SQL
       DECLARE cursor_suc CURSOR FOR
           SELECT nro_caj_sf
           FROM   cred_suc
           WHERE  nro_ca=:nro_ca 
           ORDER BY nro_caj_sf;

       EXEC SQL 
           OPEN cursor_suc;

       EXEC SQL 
           FETCH cursor_suc
           INTO  :nro_caj_sf;


       while (sqlca.sqlcode==0)
       {

              montoventa=0;
              montocierre=0;
              montoacerrar=0;
              montoanterior=0;

              EXEC SQL
                 SELECT sum(decode(x.cod_trx, '00',x.monto, '02', x.monto*(-1)))
                 INTO  :montoventa
                 FROM cred_trx x, cred_term  t
                 WHERE x.cod_est in ('00','02','43','04') and 
                       x.cod_tar=:cod_tar and
                       TO_CHAR(TO_DATE(x.fec_loc, 'MMDDHH24MISS'), 'DDMM')=
                       :fecha and 
                       x.nro_caj = t.nro_caj and
                                   t.nro_Caj_sf=:nro_caj_sf and 
                                    t.nro_ca=:nro_ca;
             
              printf("Salida del select [%d]\n",sqlca.sqlcode);
 
              EXEC SQL
                 SELECT sum(decode(x.cod_trx, '00', x.monto, '02',x.monto*(-1)))
                 INTO  :montocierre
                 FROM cred_trx x, cred_term t
                 WHERE x.cod_est='04' and 
                       x.cod_tar=:cod_tar and
                       TO_CHAR(TO_DATE(x.fec_loc, 'MMDDHH24MISS'), 'DDMM')=
                       :fecha and 
                       x.nro_caj=t.nro_caj and 
                                   t.nro_Caj_sf=:nro_caj_sf and 
                                    t.nro_ca=:nro_ca;

              printf("Salida del select [%d]\n",sqlca.sqlcode);
 
              EXEC SQL
                 SELECT sum(decode(x.cod_trx,'00', x.monto, '02', x.monto*(-1)))
                 INTO  :montoacerrar
                 FROM cred_trx x, cred_term t
                 WHERE x.cod_est in ('00','02','43')  and 
                       x.cod_tar=:cod_tar and
                       TO_CHAR(TO_DATE(x.fec_loc, 'MMDDHH24MISS'), 'DDMM')=
                       :fecha and 
                       x.nro_caj =t.nro_caj  and
                                   t.nro_Caj_sf=:nro_caj_sf and 
                                    t.nro_ca=:nro_ca;

              printf("Salida del select [%d]\n",sqlca.sqlcode);  

              EXEC SQL
                 SELECT sum(decode(x.cod_trx,'00',x.monto, '02', x.monto*(-1)))
                 INTO  :montoanterior
                 FROM cred_trx x, cred_term t
                 WHERE x.cod_est in ('00','02','43')  and 
                       x.cod_tar=:cod_tar and
                       TO_CHAR(TO_DATE(x.fec_loc, 'MMDDHH24MISS'), 'DDMM')<
                       :fecha and 
                       x.nro_caj=t.nro_caj and 
                                   t.nro_Caj_sf=:nro_caj_sf and 
                                    t.nro_ca=:nro_ca;
 

              printf("Salida del select [%d]\n",sqlca.sqlcode); 



       printf("\n   SUCURSAL: %s   ", nro_caj_sf.arr); 

       fprintf(fcie, "  %s", &nro_caj_sf.arr[2]); 
       fprintf(fcie, "   \t%10.2f",montoventa/100); 
       fprintf(fcie, "   \t%10.2f",montocierre/100 ); 
       fprintf(fcie, "   \t%10.2f",montoacerrar/100); 
       fprintf(fcie, "   \t%10.2f\n",montoanterior/100); 

       printf("\t%6.2f",montoventa/100); 
       printf("\t%6.2f",montocierre/100 ); 
       printf("\t%6.2f",montoacerrar/100); 
       printf("\t%6.2f\n",montoanterior/100); 

       cant_suc++;                     
       if ((montoventa==0) && (montoacerrar==0) && (montocierre==0) &&
          (montoanterior==0))
       {
          no_suc++;
       } 
  
       totalventa+=montoventa/100;
       totalcierre+=montocierre/100;
       totalacerrar+=montoacerrar/100;
       totalanterior+=montoanterior/100;

   

     EXEC SQL 
           FETCH cursor_suc
           INTO  :nro_caj_sf;

     }



     EXEC SQL
         CLOSE cursor_suc;

       fprintf(fcie, "-------------------------------------------------------------------------------\n"); 
     fprintf(fcie, "\nTARJETA: %s\n", descrip.arr); 
     fprintf(fcie, "\n\tTOTAL ");
     fprintf(fcie, " %10.2f", totalventa);
     fprintf(fcie, "   \t%10.2f", totalcierre);
     fprintf(fcie, "   \t%10.2f", totalacerrar);
     fprintf(fcie, "   \t%10.2f\n\n", totalanterior);
    
     fprintf(fcie, "\TOTAL DE SUCURSALES PROCESADAS      : %03d\n", cant_suc);
     fprintf(fcie, "\TOTAL DE SUCURSALES SIN MOVIMIENTOS : %03d\n", no_suc);



    totalventa=0;
    totalacerrar= 0;
    totalcierre=0;
    totalanterior=0;
 
    EXEC SQL 
         FETCH cursor_tar
         INTO :nro_ca, :descrip, :cod_tar;
    fprintf(fcie, "\n\n\n\n\n\n\n");
    }

    EXEC SQL 
       CLOSE cursor_tar;
    
    fclose(fcie);
}

 

