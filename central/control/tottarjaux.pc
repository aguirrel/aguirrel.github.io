/************************************************************************/
/*									*/
/* tottarj.pc	    : Listado de transacciones aprobadas en el          */
/*		      Cierre de Lote de Tarjetas.                       */
/*                    Da el total por sucursal para cada tarjeta.       */ 
/*									*/
/* Proyecto	    : Autorizacion de tarjetas de credito - StoreFlow.	*/
/* Cliente	    : Coto						*/
/* Autor	    : Denise Lucien 					*/
/* Fecha	    : 29/12/97						*/
/* Compilador	    : C++						*/
/* Base de datos    : Oracle						*/
/*									*/
/************************************************************************/

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>

#ifndef OK
  #define OK    0
  #define NOOK  -1
#endif
 
#define USERID_LEN   20
#define PASSWD_LEN   20

extern int	SqlErrno;

typedef struct
{
    char	userid[USERID_LEN+1];
    char	passwd[PASSWD_LEN+1];
} str_login;
     
EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
    VARCHAR	userid[20];
    VARCHAR	passwd[20];
    VARCHAR	nro_caj[5];
    VARCHAR	nro_caj_sf[5];
    VARCHAR	monto[12];
    VARCHAR	fecha[4];
    VARCHAR	fec_loc[10];
    VARCHAR	nro_tar[20];
    VARCHAR	cod_tar[2];
    VARCHAR	nro_ca[2];
    VARCHAR	descrip[30];
    VARCHAR	cod_trx[2];
    VARCHAR     nro_lot[4];
    VARCHAR     fec_rta[10];
    VARCHAR     caja_aux[5];
    int         montoparc; 
    int         montopend;

EXEC SQL END DECLARE SECTION;

void getFechaActual(char *fecha)
{
struct tm	*newtime;
time_t	        ltime;

    time(&ltime);
    newtime=localtime(&ltime);

    sprintf(fecha, "%02d/%02d/%02d", newtime->tm_mday, 
	           newtime->tm_mon+1, newtime->tm_year);
}


int open_db(str_login *data)
{
int SqlErrno;

    strcpy((char *)userid.arr, data->userid);
    userid.len=strlen(data->userid);
    strcpy((char *)passwd.arr, data->passwd);
    passwd.len=strlen(data->passwd);

    EXEC SQL
	CONNECT :userid IDENTIFIED BY :passwd;
    if (sqlca.sqlcode!=OK)
       {
	  SqlErrno=sqlca.sqlcode;
	  return NOOK;
       }
    SqlErrno=OK;
    return OK;
}

void init()
{
    str_login	login_data;

    strcpy(login_data.userid, "u601");
    strcpy(login_data.passwd, "u601");
    open_db(&login_data);
}



void main (int argc, char *argv[])
{
FILE    *fcie, *fd;
char    fec[15];
char    filename[30];
char    szfecha[5];
char    szcod_tar[3];
char    sznro_caj_sf[6];
double  total_parc;
double  total_pend;
double  total_tarj;
double  totalpen_tarj;
double  total;
double  totalpen;
double  total_sucpen; 
double  total_suc; 
int     pagina;
int     cant_suc;
int     no_suc;
char    fecha_aux[6];

     init();

     if ((fd=fopen("/online/log/fecha.dat", "r"))==NULL)
     {
        printf("Error en apertura de archivo: fecha.dat\n");
        exit(0);
     }

     fscanf(fd, "%s", szfecha);
     printf("Fecha leida: %s\n", szfecha);

     strcpy((char *)fecha.arr, szfecha);
     fecha.len=strlen(szfecha);

     strcpy(filename, "/online/chec/res/");
     strcat(filename, "totales.");
     strcat(filename, szfecha);

     if ((fcie=fopen(filename, "w"))==NULL)
     {
         printf("Error en apertura de archivo [%s]\n", filename);
         exit(0);
     }

     printf("Generando: [%s]\n", filename);

  

     EXEC SQL
       DECLARE cursor_tar CURSOR FOR
         SELECT nro_ca, descrip, cod_tar 
         FROM cred_tarj
         ORDER BY  cod_tar; 

     EXEC SQL
         OPEN cursor_tar;  

     EXEC SQL 
         FETCH cursor_tar
         INTO :nro_ca, :descrip, :cod_tar;
          
     total_tarj=0.0;
     totalpen_tarj=0.0;
     pagina=0; 
     while (sqlca.sqlcode==0)
     { 
     pagina++;

     cant_suc=0;
     no_suc=0;

     getFechaActual(fec);
     fprintf(fcie, "\n\tCOTO C.I.C.S.A.\t\t\t\t\tFECHA : %s\n",fec); 
     printf("Fecha actual: %s\n", fec);
     


     fprintf(fcie, "\tPGM: tottarj    \t\t\t\tPagina:%02d \n",pagina); 

     fprintf(fcie, "\n\n\t TOTALES DE VENTAS POR SUCURSAL"); 

       memset(fecha_aux, '\0', 6);
       strncpy(fecha_aux, szfecha, 2);
       strcat(fecha_aux, "/");
       strcat(fecha_aux, &szfecha[2]);
       fprintf(fcie, "  TARJETA: %.15s AL: %s\n", descrip.arr, fecha_aux); 
       fprintf(fcie, "\t\t\tFECHA DE PRESENTACION: %s\n\n\n",fec); 
       printf("\n\n\t\tTARJETA: %s\n", descrip.arr); 
       fprintf(fcie, "-------------------------------------------------------------------------------\n"); 
       fprintf(fcie, "\tSucursal \t\t   Total $\t\t\t Pendientes\n"); 
       fprintf(fcie, "-------------------------------------------------------------------------------\n\n"); 
 
       EXEC SQL
       DECLARE cursor_suc CURSOR FOR
           SELECT nro_caj_sf
           FROM   cred_suc
           WHERE  nro_ca=:nro_ca 
           ORDER BY nro_caj_sf;

       EXEC SQL 
           OPEN cursor_suc;

       EXEC SQL 
           FETCH cursor_suc
           INTO  :nro_caj_sf;


       while (sqlca.sqlcode==0)
       {

           total_suc=0;
           total_pend=0;
           montopend=0;
           montoparc=0;

              EXEC SQL
                 SELECT sum(decode(cod_trx, '00', monto, '02', monto*(-1)))
                 INTO  :montoparc
                 FROM cred_trx
                 WHERE nro_caj_sf=:nro_caj_sf and
                       cod_est='04' and 
                       cod_tar=:cod_tar and
                       TO_CHAR(TO_DATE(fec_loc, 'MMDDHH24MISS'), 'DDMM')=
                       :fecha;

          total_suc=montoparc;


     memset((char *)caja_aux.arr, '\0', strlen((char *)caja_aux.arr));
     strcpy((char *)caja_aux.arr, "999");
     strncat((char *)caja_aux.arr, (char *)&nro_caj_sf.arr[3], 2);
     caja_aux.len=strlen((char *)caja_aux.arr);

     EXEC SQL
        SELECT sum (monto)
        INTO  :montopend
        FROM cred_trx 
        WHERE nro_caj=:caja_aux and
              cod_est='43' and
              cod_tar=:cod_tar and
              TO_CHAR(TO_DATE(fec_loc, 'MMDDHH24MISS'), 'DDMM')=
                       :fecha;

       total=total_suc/100.00;
       totalpen=montopend/100.00;

       printf("\n   SUCURSAL: %s   ", nro_caj_sf.arr); 
       printf("   total: %10.2f      Pend: %10.2f\n", total_suc/100,totalpen);

       fprintf(fcie, "\t  %s", &nro_caj_sf.arr[2]); 
       fprintf(fcie, "\t\t\t%10.2f",total); 
       fprintf(fcie, "\t\t\t%10.2f\n",totalpen); 

       cant_suc++;                     
       if ((total==0) && (totalpen==0))
       {
          no_suc++;
       }
       total_tarj+= total_suc;
       total_sucpen+= montopend;
   

     EXEC SQL 
           FETCH cursor_suc
           INTO  :nro_caj_sf;

     }



     EXEC SQL
         CLOSE cursor_suc;

       fprintf(fcie, "-------------------------------------------------------------------------------\n"); 
     fprintf(fcie, "\nTARJETA: %s\n", descrip.arr); 
     fprintf(fcie, "\n\tTOTAL ");
     fprintf(fcie, "\t\t\t%10.2f", total_tarj/100);
     fprintf(fcie, "\t\t\t%10.2f\n\n", total_sucpen/100);
    
     fprintf(fcie, "\TOTAL DE SUCURSALES PROCESADAS      : %03d\n", cant_suc);
     fprintf(fcie, "\TOTAL DE SUCURSALES SIN MOVIMIENTOS : %03d\n", no_suc);



    total_tarj=0;
    total_sucpen= 0;
   
    EXEC SQL 
         FETCH cursor_tar
         INTO :nro_ca, :descrip, :cod_tar;
    fprintf(fcie, "\n\n\n\n\n\n\n");
    }

    EXEC SQL 
       CLOSE cursor_tar;
    
    fclose(fcie);
}

 

