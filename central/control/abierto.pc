#ifndef OK
  #define OK    0
  #define NOOK  -1
#endif

#define USERID_LEN   20
#define PASSWD_LEN   20

extern int	SqlErrno;

typedef struct
{
    char	userid[USERID_LEN+1];
    char	passwd[PASSWD_LEN+1];
} str_login;

EXEC SQL INCLUDE SQLCA;

EXEC SQL BEGIN DECLARE SECTION;
    VARCHAR	userid[20];
    VARCHAR	passwd[20];
    VARCHAR     descrip[30];
    VARCHAR     nro_ca[2];
    VARCHAR     fecha[4];
EXEC SQL END DECLARE SECTION;


int open_db(str_login *data)
{
int SqlErrno;

    strcpy(userid.arr, data->userid);
    userid.len=strlen(data->userid);
    strcpy(passwd.arr, data->passwd);
    passwd.len=strlen(data->passwd);

    EXEC SQL
	CONNECT :userid IDENTIFIED BY :passwd;
    if (sqlca.sqlcode!=OK)
    {
	SqlErrno=sqlca.sqlcode;
        printf("Error al conectarse a la Base de Datos\n");
	return NOOK;
    }
    SqlErrno=OK;
    return OK;
}

void init()
{
    str_login	login_data;

    strcpy(login_data.userid, "u601");
    strcpy(login_data.passwd, "u601");
    open_db(&login_data);
}


void main(int argc,char *argv[])
{

int cont;
long monto;
  

    if (argc<2)
       {
       printf("Uso: %s <mmdd>\n",argv[0]);
       exit(0);
       }

    init();

       strcpy((char *)fecha.arr,argv[1]);
       fecha.len=strlen((char *)fecha.arr);

    EXEC SQL
        DECLARE cursor_ca CURSOR FOR
           SELECT nro_ca, descrip
           FROM cred_cas;
        
    EXEC SQL
        OPEN cursor_ca;

    EXEC SQL 
        FETCH cursor_ca
        INTO :nro_ca, :descrip;

    while (sqlca.sqlcode==0)
    {
    
        EXEC SQL
            SELECT count(*),sum(decode(cod_trx,'00',monto,-monto))
            INTO :cont,:monto
            FROM cred_trx
            WHERE nro_ca=:nro_ca 
                  AND cod_est='02'
                  AND substr(fec_loc,1,4)=:fecha;


         printf("\t%.15s Trx abiertas  %8d    por %10.2lf\n", descrip.arr, cont,(long double)monto/100);

         EXEC SQL 
             FETCH cursor_ca
             INTO :nro_ca, :descrip;

     }
         printf("\n");

     EXEC SQL
         CLOSE cursor_ca;
 
}
